# -*- mode: Perl -*-
# /=====================================================================\ #
# |  mathbbol.sty                                                       | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #
# | Part of LaTeXML:                                                    | #
# |  Public domain software, produced as part of work done by the       | #
# |  United States Government & not subject to copyright in the US.     | #
# |---------------------------------------------------------------------| #
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     | #
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    | #
# \=========================================================ooo==U==ooo=/ #
package LaTeXML::Package::Pool;
use strict;
use warnings;
use LaTeXML::Package;

#======================================================================
# NOTE: Even to the extent this stuff gets converted to MathML correctly,
# there seems little support for these characters in blackboard bold
# (ie. no double-struck greek in Unicode!)

DefConditional('\ifcspex');
DefConditional('\ifbbgreekl');
#DeclareOption{cspex}{\cspextrue}
#DeclareOption{bbgreekl}{\bbgreekltrue}
#ProcessOptions

# Note that (currently) DefMath doesn't actually arrange for font options
# to be applied to the presentation macro! (presumably a bug)
DefConstructor('\lx@mbfont{}', '#1', bounded => 1, requireMath => 1,
  font => { family => 'blackboard', shape => 'upright', forcefamily => 1, forceshape => 1 });

DefMath('\Eins',    '\lx@mbfont{1}');
DefMath('\Langle',  '\lx@mbfont{<}', role => 'OPEN');
DefMath('\Lbrack',  '\lx@mbfont{[}', role => 'OPEN');
DefMath('\Lparen',  '\lx@mbfont{(}', role => 'OPEN');
DefMath('\Rangle',  '\lx@mbfont{>}', role => 'CLOSE');
DefMath('\Rbrack',  '\lx@mbfont{]}', role => 'CLOSE');
DefMath('\Rparen',  '\lx@mbfont{)}', role => 'CLOSE');
DefMath('\bbalpha', '\lx@mbfont{\alpha}');
DefMath('\bbbeta',  '\lx@mbfont{\beta}');
DefMath('\bbchi',   '\lx@mbfont{\chi}');
DefMath('\bbdelta', '\lx@mbfont{\delta}');
# Yes, espilon !
DefMath('\bbespilon', '\lx@mbfont{\epsilon}');
DefMath('\bbeta',     '\lx@mbfont{\beta}');
DefMath('\bbgamma',   '\lx@mbfont{\gamma}');
DefMath('\bbiota',    '\lx@mbfont{i}');
DefMath('\bbkappa',   '\lx@mbfont{\kappa}');
DefMath('\bblambda',  '\lx@mbfont{\lambda}');
DefMath('\bbmu',      '\lx@mbfont{\mu}');
DefMath('\bbnu',      '\lx@mbfont{\nu}');
DefMath('\bbomega',   '\lx@mbfont{\omega}');
DefMath('\bbphi',     '\lx@mbfont{\phi}');
DefMath('\bbpi',      '\lx@mbfont{\pi}');
DefMath('\bbpsi',     '\lx@mbfont{\psi}');
DefMath('\bbrho',     '\lx@mbfont{\rho}');
DefMath('\bbsigma',   '\lx@mbfont{\sigma}');
DefMath('\bbtau',     '\lx@mbfont{\tau}');
DefMath('\bbtheta',   '\lx@mbfont{\theta}');
DefMath('\bbupsilon', '\lx@mbfont{\upsilon}');
DefMath('\bbxi',      '\lx@mbfont{\xi}');
DefMath('\bbzeta',    '\lx@mbfont{\zeta}');

#======================================================================
1;
