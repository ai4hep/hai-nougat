.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "LaTeXML 3"
.TH LaTeXML 3 "2022-12-17" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
"LaTeXML" \- A converter that transforms TeX and LaTeX into XML/HTML/MathML
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 8
\&    use LaTeXML;
\&    my $converter = LaTeXML\->get_converter($config);
\&    my $converter = LaTeXML\->new($config);
\&    $converter\->prepare_session($opts);
\&    $converter\->initialize_session; # SHOULD BE INTERNAL
\&    $hashref = $converter\->convert($tex);
\&    my ($result,$log,$status)
\&         = map {$hashref\->{$_}} qw(result log status);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
LaTeXML is a converter that transforms TeX and LaTeX into XML/HTML/MathML
and other formats.
.PP
A LaTeXML object represents a converter instance and can convert files on demand, until dismissed.
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
.ie n .IP """my $converter = LaTeXML\->new($config);""" 4
.el .IP "\f(CWmy $converter = LaTeXML\->new($config);\fR" 4
.IX Item "my $converter = LaTeXML->new($config);"
Creates a new converter object for a given LaTeXML::Common::Config object, \f(CW$config\fR.
.ie n .IP """my $converter = LaTeXML\->get_converter($config);""" 4
.el .IP "\f(CWmy $converter = LaTeXML\->get_converter($config);\fR" 4
.IX Item "my $converter = LaTeXML->get_converter($config);"
Either creates, or looks up a cached converter for the \f(CW$config\fR configuration object.
.ie n .IP """$converter\->prepare_session($opts);""" 4
.el .IP "\f(CW$converter\->prepare_session($opts);\fR" 4
.IX Item "$converter->prepare_session($opts);"
Top-level preparation routine that prepares both a correct options object
    and an initialized LaTeXML object,
    using the \*(L"initialize_options\*(R" and \*(L"initialize_session\*(R" routines, when needed.
.Sp
Contains optimization checks that skip initializations unless necessary.
.Sp
Also adds support for partial option specifications during daemon runtime,
     falling back on the option defaults given when converter object was created.
.ie n .IP """my ($result,$status,$log) = $converter\->convert($tex);""" 4
.el .IP "\f(CWmy ($result,$status,$log) = $converter\->convert($tex);\fR" 4
.IX Item "my ($result,$status,$log) = $converter->convert($tex);"
Converts a TeX input string \f(CW$tex\fR into the LaTeXML::Core::Document object \f(CW$result\fR.
.Sp
Supplies detailed information of the conversion log ($log),
         as well as a brief conversion status summary ($status).
.SS "\s-1INTERNAL ROUTINES\s0"
.IX Subsection "INTERNAL ROUTINES"
.ie n .IP """$converter\->initialize_session($opts);""" 4
.el .IP "\f(CW$converter\->initialize_session($opts);\fR" 4
.IX Item "$converter->initialize_session($opts);"
Given an options hash reference \f(CW$opts\fR, initializes a session by creating a new LaTeXML object
      with initialized state and loading a daemonized preamble (if any).
.Sp
Sets the \*(L"ready\*(R" flag to true, making a subsequent \*(L"convert\*(R" call immediately possible.
.ie n .IP """my $latexml = new_latexml($opts);""" 4
.el .IP "\f(CWmy $latexml = new_latexml($opts);\fR" 4
.IX Item "my $latexml = new_latexml($opts);"
Creates a new LaTeXML object and initializes its state.
.ie n .IP """my $postdoc = $converter\->convert_post($dom);""" 4
.el .IP "\f(CWmy $postdoc = $converter\->convert_post($dom);\fR" 4
.IX Item "my $postdoc = $converter->convert_post($dom);"
Post-processes a LaTeXML::Core::Document object \f(CW$dom\fR into a final format,
               based on the preferences specified in $$self{opts}.
.Sp
Typically used only internally by \f(CW\*(C`convert\*(C'\fR.
.ie n .IP """$converter\->bind_log;""" 4
.el .IP "\f(CW$converter\->bind_log;\fR" 4
.IX Item "$converter->bind_log;"
Binds \s-1STDERR\s0 to a \*(L"log\*(R" field in the \f(CW$converter\fR object
.ie n .IP """my $log = $converter\->flush_log;""" 4
.el .IP "\f(CWmy $log = $converter\->flush_log;\fR" 4
.IX Item "my $log = $converter->flush_log;"
Flushes out the accumulated conversion log into \f(CW$log\fR,
         resetting \s-1STDERR\s0 to its usual stream.
.SH "AUTHOR"
.IX Header "AUTHOR"
Bruce Miller <bruce.miller@nist.gov>
Deyan Ginev <deyan.ginev@nist.gov>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Public domain software, produced as part of work done by the
United States Government & not subject to copyright in the \s-1US.\s0
You may consider this as released under the \s-1CC0\s0 License.
